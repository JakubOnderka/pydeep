name: Build wheels

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - 3.6
          - 3.7
          - 3.8
          - 3.9
          - '3.10'
    timeout-minutes: 60
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      -
        name: Build ssdeep
        run: |
          curl -LO https://github.com/ssdeep-project/ssdeep/releases/download/release-2.14/ssdeep-2.14.tar.gz
          tar -zxf ssdeep-2.14.tar.gz
          cd ssdeep-2.14
          ./configure
          make -j2
          sudo make install
          sudo ldconfig
      -
        name: Build package
        run: |
          python setup.py build
          cd tests
          python test.py

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: test
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Build wheels for x86_64
        uses: RalfG/python-wheels-manylinux-build@v0.4.2-manylinux2014_x86_64
        with:
          python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310'
          system-packages: 'ssdeep-devel'
      -
        name: Move build wheels to /tmp # this will avoid aarch64 build problems
        run: |
          mkdir /tmp/dist_x86_64
          sudo mv dist/* /tmp/dist_x86_64/
      -
        name: Build wheels for aarch64
        uses: RalfG/python-wheels-manylinux-build@v0.4.2-manylinux2014_aarch64
        with:
          python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310'
          pre-build-command: 'sh .github/workflows/pre-build-command.sh'
        env:
          DOCKER_DEFAULT_PLATFORM: linux/arm64
      -
        name: Fix perms
        run: |
          sudo mv /tmp/dist_x86_64/* dist/
          sudo chown `whoami` -R .
      -
        name: Store wheels in artifact
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist/*manylinux*.whl
      -
        name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      -
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine build
      -
        name: Generate source package
        run: |
          python -m build -s
          ls dist/
      -
        name: Publish wheels to TEST PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload --skip-existing -r testpypi dist/*-manylinux*.whl dist/*.tar.gz
